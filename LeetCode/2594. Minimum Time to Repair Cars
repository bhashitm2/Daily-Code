class Solution {
public:
    bool can(vector<int>ranks,long long mid,int cars){
        long long cnt=0;
        for(int i=0;i<ranks.size();i++){
            cnt+=sqrt(mid/ranks[i]);
        }
        return cnt>=cars;
    }
    long long repairCars(vector<int>& ranks, int cars) {
        long long ans=0;
        long long n=ranks.size();
        long long low=1;
        long long high=(long long)*min_element(ranks.begin(),ranks.end())*cars*cars;
        while(low<=high){
            long long mid=low+(high-low)/2;
            if(can(ranks,mid,cars)){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};
