class Solution {
public:
    bool fxn(vector<int>nums,vector<vector<int>>queries,int k){
        int n=nums.size();
        int sum=0;
        vector<int>diff(n+1);
        for(int i=0;i<k;i++){
            int strt=queries[i][0];
            int end=queries[i][1];
            int val=queries[i][2];
            diff[strt]+=val;
            diff[end+1]-=val;
        }
        for(int i=0;i<n;i++){
            sum+=diff[i];
            if(sum<nums[i])return false;
        }
        return true;
    }
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) {
        int n=nums.size();
        int left=0;
        int right=queries.size();
        if(!fxn(nums,queries,right))return -1;
        while(left<=right){
            int mid=(left+right)/2;
            if(fxn(nums,queries,mid)){
                right=mid-1;
            }
            else{
                left=mid+1;
            }
        }
        return left;
    }
};
