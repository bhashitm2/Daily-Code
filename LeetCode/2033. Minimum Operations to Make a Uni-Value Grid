class Solution {
public:
    int median(vector<vector<int>>& grid, int n, int m) {
        vector<int> arr;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                arr.push_back(grid[i][j]);
            }
        }
        sort(arr.begin(), arr.end());
        return arr[(n * m) / 2];
    }
    int minOperations(vector<vector<int>>& grid, int x) {
        int n=grid.size();
        int m=grid[0].size();
        int remainder = grid[0][0] % x;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (grid[i][j] % x != remainder) {
                    return -1;
                }
            }
        }
        int ele=median(grid,n,m);
        cout<<ele;
        int operations=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                int val = abs(grid[i][j]-ele);
                operations+=val/x;
            }
        }   
        return operations;
    }
};
