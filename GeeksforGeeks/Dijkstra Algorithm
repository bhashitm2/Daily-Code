class Solution {
  public:
    vector<int> dijkstra(int V, vector<vector<int>> &edges, int src) {
        vector<vector<pair<int, int>>>adj(V);
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            int w=edges[i][2];
            adj[u].push_back({v,w});
        }
        queue<pair<int,int>>pq;
        vector<int>ans(adj.size(),INT_MAX);
        ans[src]=0;
        pq.push({0,src});
        while(!pq.empty()){
            int dis=pq.front().first;
            int node=pq.front().second;
            pq.pop();
            for(auto it : adj[node]){
                int wt=it.second;
                int n=it.first;
                if(dis+wt<ans[n]){
                    ans[n]=dis+wt;
                    pq.push({ans[n],n});
                }
            }
        }
        return ans;
    }
};
