class Solution {
  public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>>ans;
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>pq;
        for(int i=0;i<points.size();i++){
            int x=points[i][0];
            int y=points[i][1];
            int new_x=x*x;
            int new_y=y*y;
            int new_val=new_x+new_y;
            new_val=sqrt(new_val);
            pq.push({new_val,{x,y}});
        }
        while(k>0){
            auto it=pq.top();
            int x=it.second.first;
            int y=it.second.second;
            pq.pop();
            ans.push_back({x,y});
            k--;
        }
        return ans;
    }
};
